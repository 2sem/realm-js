name: Integration Tests

on:
  pull_request:
    paths:
      # Source code
      - "*"
      - "lib/**"
      - "src/**"
      - "types/**"
      - "react-native/**"
      - "vendor/**"
      # Integration tests
      - "integration-tests/**"
      # No need to run when updating documentation
      - "!**.md"
      # Run this on updates to the workflow
      - ".github/workflows/integration-tests.yml"

jobs:
  react-native-android:
    name: React Native on Android (${{ matrix.type }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        #TODO: Reactivate debug when builds are optimized
        #type: [Release, Debug]
        type: [Release]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: Install npm v7
        run: npm install -g npm@7
      # Setup tools
      - name: Install tools
        run: brew install watchman
      # TODO: Expose a way to skip building the Node.js native module
      - name: Patch package.json to avoid building Node.js native module
        run: cat <<< $(jq '.scripts.install = "echo skipping building Node.js binary"' < package.json) > package.json
      # Install the root package
      - uses: actions/cache@v2
        name: Restore node_modules
        id: cache-node-modules
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      # Caches
      - uses: actions/cache@v2
        name: Restore Android build folders from cache
        with:
          path: |
            build-realm-android
            react-native/android/build
          key: android-build-dir-${{ hashFiles('src/**', 'react-native/android/**', 'vendor/**') }}
          restore-keys: |
            android-build-dir-
      - uses: actions/cache@v2
        name: Restore Android librealm.so from cache
        id: cache-android-so
        with:
          path: react-native/android/**/librealm.so
          key: android-so-${{ hashFiles('src/**', 'react-native/android/**', 'vendor/**') }}

      - run: npm ci
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
      # Build the Android shared object file (if cache missed)
      - run: ANDROID_NDK=$ANDROID_NDK_HOME node scripts/build-android.js --arch=x86 --build-type=${{ matrix.type }}
        if: ${{ steps.cache-android-so.outputs.cache-hit != 'true' }}
      # Bootstrap lerna sub-packages (builds the packages, the Realm JS native module and pod install)
      - run: npx lerna bootstrap --scope '{realm-integration-tests,realm-react-native-tests}' --include-dependencies
      # Run the tests
      - name: Run tests (Android / Native)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          emulator-build: 7425822 # https://github.com/ReactiveCircus/android-emulator-runner/issues/160
          target: google_apis
          script: npm run test:android --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
          MOCHA_REMOTE_EXIT_ON_ERROR: true
          SPAWN_LOGCAT: true
      - name: Run tests (Android / Chrome Debugging)
        if: ${{ false }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          emulator-build: 7425822 # https://github.com/ReactiveCircus/android-emulator-runner/issues/160
          target: google_apis
          script: npm run test:android:chrome --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
          MOCHA_REMOTE_EXIT_ON_ERROR: true
          HEADLESS_DEBUGGER: true
          SPAWN_LOGCAT: true
