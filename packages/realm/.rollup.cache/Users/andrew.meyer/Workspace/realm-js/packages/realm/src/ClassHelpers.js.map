{"version":3,"file":"ClassHelpers.js","sourceRoot":"","sources":["ClassHelpers.ts"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,EAAE;AACF,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAE5E,OAAO,EAGL,gBAAgB,GAKjB,MAAM,YAAY,CAAC;AAkBpB,MAAM,UAAU,eAAe,CAAC,WAAmC,EAAE,KAAmB;IACtF,+CAA+C;IAC/C,MAAM,CAAC,cAAc,CAAC,WAAW,EAAE,gBAAgB,EAAE;QACnD,UAAU,EAAE,KAAK;QACjB,QAAQ,EAAE,KAAK;QACf,YAAY,EAAE,KAAK;QACnB,KAAK;KACN,CAAC,CAAC;AACL,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,eAAe,CAAC,GAAuB;IACrD,MAAM,OAAO,GAAG,GAAG,CAAC,gBAAgB,CAAC,CAAC;IACtC,IAAI,OAAO,EAAE;QACX,OAAO,OAAuB,CAAC;KAChC;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,+CAA+C,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC;KACnF;AACH,CAAC","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport {\n  CanonicalObjectSchema,\n  DefaultObject,\n  INTERNAL_HELPERS,\n  PropertyMap,\n  RealmObject,\n  RealmObjectConstructor,\n  binding,\n} from \"./internal\";\n\ntype BindingObjectSchema = binding.Realm[\"schema\"][0];\n\ntype ObjectWrapper = (obj: binding.Obj) => (RealmObject & DefaultObject) | null;\n\n/**\n * @internal\n */\nexport type ClassHelpers = {\n  constructor: RealmObjectConstructor;\n  // TODO: Use a different type, once exposed by the binding\n  objectSchema: BindingObjectSchema;\n  properties: PropertyMap;\n  wrapObject: ObjectWrapper;\n  canonicalObjectSchema: CanonicalObjectSchema;\n};\n\nexport function setClassHelpers(constructor: RealmObjectConstructor, value: ClassHelpers): void {\n  // Store the properties map on the object class\n  Object.defineProperty(constructor, INTERNAL_HELPERS, {\n    enumerable: false,\n    writable: false,\n    configurable: false,\n    value,\n  });\n}\n\n/**\n * Get internal helpers.\n * NOTE: This is a free function instead of a member of RealmObject to limit conflicts with user defined properties.\n * @param arg The object or constructor to get a helpers for.\n * @returns Helpers injected onto the class by the `ClassMap`.\n */\nexport function getClassHelpers(arg: typeof RealmObject): ClassHelpers {\n  const helpers = arg[INTERNAL_HELPERS];\n  if (helpers) {\n    return helpers as ClassHelpers;\n  } else {\n    throw new Error(`Expected INTERNAL_HELPERS to be set on the '${arg.name}' class`);\n  }\n}\n"]}