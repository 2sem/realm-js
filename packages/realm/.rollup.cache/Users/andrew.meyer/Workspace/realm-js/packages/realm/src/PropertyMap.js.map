{"version":3,"file":"PropertyMap.js","sourceRoot":"","sources":["PropertyMap.ts"],"names":[],"mappings":"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","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { HelperOptions, PropertyHelpers, binding, createPropertyHelpers } from \"./internal\";\n\ntype BindingObjectSchema = binding.Realm[\"schema\"][0];\n\nclass UninitializedPropertyMapError extends Error {\n  constructor() {\n    super(\"Property Map was accessed before it got initialized\");\n  }\n}\n\n/** @internal */\nexport class PropertyMap {\n  private objectSchemaName: string | null = null;\n  private initialized = false;\n  private mapping: Record<string, PropertyHelpers | undefined> = {};\n  private nameByColumnKey: Map<binding.ColKey, string> = new Map();\n  private _names: string[] = [];\n\n  public initialize(objectSchema: BindingObjectSchema, defaults: Record<string, unknown>, options: HelperOptions) {\n    const { name: objectSchemaName, persistedProperties, computedProperties } = objectSchema;\n    this.objectSchemaName = objectSchemaName;\n    const properties = [...persistedProperties, ...computedProperties];\n    this.mapping = Object.fromEntries(\n      properties.map((property) => {\n        const propertyName = property.publicName || property.name;\n        const embedded = property.objectType\n          ? options.getClassHelpers(property.objectType).objectSchema.tableType === binding.TableType.Embedded\n          : false;\n        const helpers = createPropertyHelpers({ ...property, embedded, objectSchemaName }, options);\n        // Allow users to override the default value of properties\n        const defaultValue = defaults[propertyName];\n        helpers.default = typeof defaultValue !== \"undefined\" ? defaultValue : helpers.default;\n        return [propertyName, helpers];\n      }),\n    );\n    this.nameByColumnKey = new Map(properties.map((p) => [p.columnKey, p.publicName || p.name]));\n    this._names = properties.map((p) => p.publicName || p.name);\n    this.initialized = true;\n  }\n\n  public get = (property: string): PropertyHelpers => {\n    if (this.initialized) {\n      const helpers = this.mapping[property];\n      if (!helpers) {\n        throw new Error(`Property '${property}' does not exist on '${this.objectSchemaName}' objects`);\n      }\n      return helpers;\n    } else {\n      throw new UninitializedPropertyMapError();\n    }\n  };\n\n  public getName = <T>(columnKey: binding.ColKey): keyof T => {\n    if (this.initialized) {\n      return this.nameByColumnKey.get(columnKey) as keyof T;\n    } else {\n      throw new UninitializedPropertyMapError();\n    }\n  };\n\n  public get names(): string[] {\n    if (this.initialized) {\n      return this._names;\n    } else {\n      throw new UninitializedPropertyMapError();\n    }\n  }\n}\n"]}