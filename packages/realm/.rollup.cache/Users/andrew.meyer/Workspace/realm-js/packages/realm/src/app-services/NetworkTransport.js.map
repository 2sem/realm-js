{"version":3,"file":"NetworkTransport.js","sourceRoot":"","sources":["NetworkTransport.ts"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,EAAE;AACF,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAE5E,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAE/C,gBAAgB;AAChB,MAAM,UAAU,sBAAsB;IACpC,OAAO,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;QAChE,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE;YAC5C,8EAA8E;YAC9E,+CAA+C;YAC/C,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,IAAI,SAAS,CAAC;YACxC,MAAM,IAAI,GAAG,cAAc,OAAO,CAAC,GAAG,oBAAoB,MAAM,EAAE,CAAC;YACnE,QAAQ,CAAC,EAAE,cAAc,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { binding, network } from \"../internal\";\n\n/** @internal */\nexport function createNetworkTransport() {\n  return binding.Helpers.makeNetworkTransport((request, callback) => {\n    network.fetch(request).then(callback, (err) => {\n      // Core will propagate any non-zero \"custom status code\" through to the caller\n      // The error message is passed through the body\n      const reason = err.message || \"Unknown\";\n      const body = `request to ${request.url} failed, reason: ${reason}`;\n      callback({ httpStatusCode: 0, headers: {}, customStatusCode: -1, body });\n    });\n  });\n}\n"]}