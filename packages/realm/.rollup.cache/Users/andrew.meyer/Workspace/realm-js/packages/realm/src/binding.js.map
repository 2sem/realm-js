{"version":3,"file":"binding.js","sourceRoot":"","sources":["binding.ts"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,EAAE;AACF,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAE5E,OAAO,EAAE,QAAQ,EAAU,SAAS,EAAE,MAAM,4BAA4B,CAAC;AAEzE,gBAAgB;AAChB,cAAc,4BAA4B,CAAC,CAAC,wCAAwC;AAgBpF,QAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;IACtC,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE;QAC7B,IAAI,CAAC,GAAG,IAAI,CAAC;QACb,OAAO,CAAC,GAAG,EAAE,EAAE;YACb,MAAM,CAAC,CAAC;YACR,CAAC,EAAE,CAAC;SACL;KACF;AACH,CAAC,CAAC;AAEF,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAO,EAAE,EAAE,CAC/B,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,OAAQ,CAAC,CAAC;AAE1F,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG;IAC3B,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,OAAQ,CAAC,CAAC;AAC7E,CAAC,CAAC;AAEF,MAAM,OAAO,aAAc,SAAQ,SAAS;IAC1C,YAAY,KAAa;QACvB,KAAK,CAAC,mBAAmB,KAAK,gBAAgB,CAAC,CAAC;IAClD,CAAC;CACF;AAED,MAAM,UAAU,cAAc,CAAC,KAAa;IAC1C,IAAI;QACF,OAAO,MAAM,CAAC,KAAK,CAAsB,CAAC;KAC3C;IAAC,MAAM;QACN,MAAM,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC;KAChC;AACH,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,MAAc;IAC1C,OAAQ,MAA4B,KAAK,CAAC,EAAE,CAAC;AAC/C,CAAC","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { IndexSet, ObjKey, Timestamp } from \"../generated/ts/native.mjs\";\n\n/** @internal */\nexport * from \"../generated/ts/native.mjs\"; // core types are transitively exported.\n\n/** @internal */\ndeclare module \"../generated/ts/native.mjs\" {\n  interface IndexSet {\n    asIndexes(): Iterator<number>;\n  }\n  interface Timestamp {\n    toDate(): Date;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Timestamp {\n    export function fromDate(d: Date): Timestamp;\n  }\n}\n\nIndexSet.prototype.asIndexes = function* (this: IndexSet) {\n  for (const [from, to] of this) {\n    let i = from;\n    while (i < to) {\n      yield i;\n      i++;\n    }\n  }\n};\n\nTimestamp.fromDate = (d: Date) =>\n  Timestamp.make(BigInt(Math.floor(d.valueOf() / 1000)), (d.valueOf() % 1000) * 1000_000);\n\nTimestamp.prototype.toDate = function () {\n  return new Date(Number(this.seconds) * 1000 + this.nanoseconds / 1000_000);\n};\n\nexport class InvalidObjKey extends TypeError {\n  constructor(input: string) {\n    super(`Cannot convert '${input}' to an ObjKey`);\n  }\n}\n\nexport function stringToObjKey(input: string): ObjKey {\n  try {\n    return BigInt(input) as unknown as ObjKey;\n  } catch {\n    throw new InvalidObjKey(input);\n  }\n}\n\nexport function isEmptyObjKey(objKey: ObjKey) {\n  return (objKey as unknown as bigint) === -1n;\n}\n"]}