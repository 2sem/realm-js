{"version":3,"file":"file-system.js","sourceRoot":"","sources":["file-system.ts"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,EAAE;AACF,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E;AAmB5E,MAAM,CAAC,MAAM,EAAE,GAAmB;IAChC,UAAU;QACR,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,eAAe;QACb,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,cAAc;QACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,SAAS;QACP,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,uBAAuB;QACrB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,aAAa;QACX,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,MAAM;QACJ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;IACD,qBAAqB;QACnB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACpD,CAAC;CACF,CAAC;AAEF,MAAM,UAAU,MAAM,CAAC,QAAwB;IAC7C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC7C,CAAC","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\ntype FileSystemType = {\n  removeFile(path: string): void;\n  removeDirectory(path: string): void;\n  isAbsolutePath(path: string): boolean;\n  joinPaths(...segments: string[]): string;\n  getDefaultDirectoryPath(): string;\n  readDirectory(path: string): Dirent[];\n  exists(path: string): boolean;\n  copyBundledRealmFiles(): void;\n};\n\nexport type Dirent = {\n  name: string;\n  isFile(): boolean;\n  isDirectory(): boolean;\n};\n\nexport const fs: FileSystemType = {\n  removeFile() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  removeDirectory() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  isAbsolutePath() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  joinPaths() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  getDefaultDirectoryPath() {\n    throw new Error(\"Not supported on this platform\");\n  },\n  readDirectory() {\n    throw new Error(\"Not supported on this playform\");\n  },\n  exists() {\n    throw new Error(\"Not supported on this playform\");\n  },\n  copyBundledRealmFiles() {\n    throw new Error(\"Not supported on this playform\");\n  },\n};\n\nexport function inject(injected: FileSystemType) {\n  Object.freeze(Object.assign(fs, injected));\n}\n"]}