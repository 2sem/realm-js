{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"AAAA,4EAA4E;AAC5E,EAAE;AACF,4BAA4B;AAC5B,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,EAAE;AACF,4EAA4E","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2022 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\nimport { RealmObject } from \"../internal\";\n\nexport type DefaultObject = Record<string, unknown>;\nexport type Constructor<T = unknown> = { new (...args: any): T };\nexport type RealmObjectConstructor<T extends RealmObject = RealmObject> = Constructor<T>;\n\nexport type PropertyTypeName =\n  | \"bool\"\n  | \"int\"\n  | \"float\"\n  | \"double\"\n  | \"decimal128\"\n  | \"objectId\"\n  | \"string\"\n  | \"data\"\n  | \"date\"\n  | \"list\"\n  | \"linkingObjects\"\n  | \"mixed\"\n  | \"uuid\"\n  | \"dictionary\"\n  | \"set\"\n  | \"object\";\n\nexport type PropertyType = string | PropertyTypeName;\n\nexport type CanonicalRealmSchema = CanonicalObjectSchema[];\n\n/**\n * The canonical representation of the schema of a specific type of object.\n */\nexport type CanonicalObjectSchema<T = DefaultObject> = {\n  name: string;\n  properties: Record<keyof T, CanonicalObjectSchemaProperty>;\n  primaryKey?: string;\n  embedded?: boolean;\n  asymmetric?: boolean;\n  constructor?: RealmObjectConstructor;\n};\n\n/**\n * The canonical representation of the schema of a specific property.\n */\nexport type CanonicalObjectSchemaProperty = {\n  name: string;\n  type: PropertyTypeName;\n  optional: boolean;\n  indexed: boolean;\n  mapTo: string; // TODO: Make this optional and leave it out when it equals the name\n  objectType?: string;\n  property?: string;\n  default?: unknown;\n};\n\n/**\n * The relaxed representation of the schema of a specific type of object.\n */\nexport type ObjectSchema = {\n  name: string;\n  primaryKey?: string;\n  embedded?: boolean;\n  asymmetric?: boolean;\n  properties: PropertiesTypes;\n};\n\nexport type PropertiesTypes = {\n  [keys: string]: ObjectSchemaProperty | PropertyType;\n};\n\n// TODO: Rename this to PropertySchema\n/**\n * The relaxed representation of the schema of a specific property.\n */\nexport type ObjectSchemaProperty = {\n  type: PropertyType;\n  objectType?: string;\n  property?: string;\n  default?: unknown;\n  optional?: boolean;\n  indexed?: boolean;\n  mapTo?: string;\n};\n"]}